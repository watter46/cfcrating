name: Build and Push app container

on:
  workflow_call:

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      assets_changed: ${{ steps.changes.outputs.assets }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            assets:
              - 'src/resources/js/**'
              - 'src/resources/css/**'
  
  build_and_push:
    needs: detect_changes
    runs-on: ubuntu-latest
    env:
      DOCKERFILE_PATH_APP: infra/docker/php/Dockerfile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Decode .env from GitHub Secrets and set environment variables
        run: |
          echo "${{ secrets.ENV }}" | base64 --decode > .env

          while IFS='=' read -r key value; do
            if [[ ! -z "$key" && ! "$key" =~ ^# ]]; then
              echo "::add-mask::$value"
              echo "$key=$value" >> $GITHUB_ENV
            fi
          done < .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Log in to Github container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image with cache to GHCR and Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH_APP }}
          target: ${{ env.ENV }}
          build-args: |
            GID=${{ env.GID }}
            UID=${{ env.UID }}
            USER_NAME=${{ env.USER_NAME }}
          push: true
          tags: |
            ${{ vars.DOCKER_USERNAME }}/cfcrating-app-production:${{ vars.VERSION }}
            ghcr.io/${{ vars.DOCKER_USERNAME }}/cfcrating-app-production:cache
          cache-from: |
            type=registry,ref=ghcr.io/${{ vars.DOCKER_USERNAME }}/cfcrating-app-production:cache
          cache-to: type=registry,ref=ghcr.io/${{ vars.DOCKER_USERNAME }}/cfcrating-app-production:cache,mode=max

      - name: remove public volume
        if: needs.detect_changes.outputs.assets_changed == 'true'
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.SSH_USER }}/src/cfcrating

            make down
            make rm-public-volume